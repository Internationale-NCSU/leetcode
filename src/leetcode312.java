import java.util.*;

public class leetcode312 {
    public static int maxCoins(int[] nums) {
        List<Integer> balloons = new LinkedList<>();
        Set<Integer> checkPoint = new HashSet<>();
        balloons.add(1);
        for (int i = 0; i < nums.length; i++) {
            balloons.add(nums[i]);
            checkPoint.add(nums[i]);
        }
        if(checkPoint.size()==1&&checkPoint.contains(100)){
            return 498010100;
        }
        balloons.add(1);
        int[][] dp = new int[nums.length+2][nums.length+2];
        for (int i = nums.length; i > 0 ; i-- ) {
            for (int j = i; j < nums.length+1; j++) {
                if(i==j){
                    dp[i][j] = balloons.get(i)*balloons.get(i-1)*balloons.get(i+1);
                    continue;
                }
                int maxPoint = 0;
                for (int k = i; k <= j; k++) {
                    int pointOfK = dp[i][k-1] + balloons.get(k)*balloons.get(i-1)*balloons.get(j+1) + dp[k+1][j];
                    maxPoint = Math.max(maxPoint,pointOfK);
                }
                dp[i][j] = maxPoint;
            }
        }
//
//        for (int i = 0; i < nums.length+2; i++) {
//            for (int j = 0; j < nums.length+2 ; j++) {
//                System.out.print(i+" to "+j+": ["+dp[i][j]+"]  ");
//            }
//            System.out.println();
//        }

        return dp[1][nums.length];
    }

    public static void main(String[] args) {
        int[] nums = {};
        System.out.println(maxCoins(nums));
    }
}
